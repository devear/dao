{"remainingRequest":"/home/four/daoconsensus/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/four/daoconsensus/src/components/D3HierarchyNode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/four/daoconsensus/src/components/D3HierarchyNode.vue","mtime":1616665346000},{"path":"/home/four/daoconsensus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/four/daoconsensus/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/four/daoconsensus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/four/daoconsensus/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIHByb3BzOiB7DQogICAgbm9kZURhdGE6IHsNCiAgICAgIHR5cGU6ICAgICBPYmplY3QsDQogICAgICByZXF1aXJlZDogdHJ1ZQ0KICAgIH0sDQogICAgbGF5b3V0VHlwZTogew0KICAgICAgdHlwZTogICAgICBTdHJpbmcsDQogICAgICBkZWZhdWx0OiAgICd0cmVlbWFwJywNCiAgICAgIHZhbGlkYXRvcjogdiA9PiB7DQogICAgICAgIHJldHVybiB2ID09PSAndHJlZW1hcCcgfHwgdiA9PT0gJ3BhcnRpdGlvbicNCiAgICAgIH0NCiAgICB9LA0KICAgIGF1dG9Qb3NpdGlvbjogew0KICAgICAgdHlwZTogT2JqZWN0DQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIGxpbmtzKCkgew0KICAgICAgaWYgKHRoaXMubm9kZURhdGEpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMubm9kZURhdGEubGlua3MoKQ0KICAgICAgfQ0KICAgIH0sDQogICAgc3R5bGVzKCkgew0KICAgICAgaWYgKCF0aGlzLmF1dG9Qb3NpdGlvbikgcmV0dXJuDQogICAgICBjb25zdCB4ID0NCiAgICAgICAgdGhpcy5sYXlvdXRUeXBlID09PSAndHJlZW1hcCcgfHwgdGhpcy5sYXlvdXRUeXBlID09PSAncGFydGl0aW9uJw0KICAgICAgICAgID8gdGhpcy5ub2RlRGF0YS54MA0KICAgICAgICAgIDogdGhpcy5ub2RlRGF0YS54DQogICAgICBjb25zdCB5ID0NCiAgICAgICAgdGhpcy5sYXlvdXRUeXBlID09PSAndHJlZW1hcCcgfHwgdGhpcy5sYXlvdXRUeXBlID09PSAncGFydGl0aW9uJw0KICAgICAgICAgID8gdGhpcy5ub2RlRGF0YS55MA0KICAgICAgICAgIDogdGhpcy5ub2RlRGF0YS55DQogICAgICBjb25zdCBwcm9wcyA9IHsNCiAgICAgICAgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHt4fXB4LCR7eX1weCwwKWANCiAgICAgIH0NCiAgICAgIC8vIElmIHRoaXMgaXMgYSB0cmVlbWFwIG9yIHBhcnRpdGlvbiBhc3NpZ24gd2lkdGggYW5kIGhlaWdodA0KICAgICAgaWYgKHRoaXMubGF5b3V0VHlwZSA9PT0gJ3RyZWVtYXAnIHx8IHRoaXMubGF5b3V0VHlwZSA9PT0gJ3BhcnRpdGlvbicpIHsNCiAgICAgICAgT2JqZWN0LmFzc2lnbihwcm9wcywgew0KICAgICAgICAgIHdpZHRoOiAgYCR7dGhpcy5ub2RlRGF0YS54MSAtIHRoaXMubm9kZURhdGEueDB9cHhgLA0KICAgICAgICAgIGhlaWdodDogYCR7dGhpcy5ub2RlRGF0YS55MSAtIHRoaXMubm9kZURhdGEueTB9cHhgDQogICAgICAgIH0pDQogICAgICB9DQogICAgICBpZiAodGhpcy5sYXlvdXRUeXBlID09PSAncGFjaycpIHsNCiAgICAgICAgT2JqZWN0LmFzc2lnbihwcm9wcywgew0KICAgICAgICAgIHdpZHRoOiAgYCR7dGhpcy5ub2RlRGF0YS5yICogMn1weGAsDQogICAgICAgICAgaGVpZ2h0OiBgJHt0aGlzLm5vZGVEYXRhLnIgKiAyfXB4YA0KICAgICAgICB9KQ0KICAgICAgfQ0KICAgICAgcmV0dXJuIHByb3BzDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["D3HierarchyNode.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"D3HierarchyNode.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <g class=\"hierarchy-node\" :style=\"styles\">\r\n    <slot v-bind=\"$props\">\r\n      <!-- <circle r=\"10\"\r\n              fill=\"#fff\">\r\n      </circle> -->\r\n    </slot>\r\n  </g>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    nodeData: {\r\n      type:     Object,\r\n      required: true\r\n    },\r\n    layoutType: {\r\n      type:      String,\r\n      default:   'treemap',\r\n      validator: v => {\r\n        return v === 'treemap' || v === 'partition'\r\n      }\r\n    },\r\n    autoPosition: {\r\n      type: Object\r\n    }\r\n  },\r\n  computed: {\r\n    links() {\r\n      if (this.nodeData) {\r\n        return this.nodeData.links()\r\n      }\r\n    },\r\n    styles() {\r\n      if (!this.autoPosition) return\r\n      const x =\r\n        this.layoutType === 'treemap' || this.layoutType === 'partition'\r\n          ? this.nodeData.x0\r\n          : this.nodeData.x\r\n      const y =\r\n        this.layoutType === 'treemap' || this.layoutType === 'partition'\r\n          ? this.nodeData.y0\r\n          : this.nodeData.y\r\n      const props = {\r\n        transform: `translate3d(${x}px,${y}px,0)`\r\n      }\r\n      // If this is a treemap or partition assign width and height\r\n      if (this.layoutType === 'treemap' || this.layoutType === 'partition') {\r\n        Object.assign(props, {\r\n          width:  `${this.nodeData.x1 - this.nodeData.x0}px`,\r\n          height: `${this.nodeData.y1 - this.nodeData.y0}px`\r\n        })\r\n      }\r\n      if (this.layoutType === 'pack') {\r\n        Object.assign(props, {\r\n          width:  `${this.nodeData.r * 2}px`,\r\n          height: `${this.nodeData.r * 2}px`\r\n        })\r\n      }\r\n      return props\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.hierarchy-node {\r\n  position: absolute;\r\n}\r\n</style>"]}]}