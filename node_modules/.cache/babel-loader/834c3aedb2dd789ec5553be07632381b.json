{"remainingRequest":"/home/four/daoconsensus/node_modules/babel-loader/lib/index.js!/home/four/daoconsensus/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/four/daoconsensus/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/four/daoconsensus/src/components/D3HierarchyNode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/four/daoconsensus/src/components/D3HierarchyNode.vue","mtime":1616665346000},{"path":"/home/four/daoconsensus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/four/daoconsensus/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/four/daoconsensus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/four/daoconsensus/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBub2RlRGF0YTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgbGF5b3V0VHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICd0cmVlbWFwJywKICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbiB2YWxpZGF0b3IodikgewogICAgICAgIHJldHVybiB2ID09PSAndHJlZW1hcCcgfHwgdiA9PT0gJ3BhcnRpdGlvbic7CiAgICAgIH0KICAgIH0sCiAgICBhdXRvUG9zaXRpb246IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgbGlua3M6IGZ1bmN0aW9uIGxpbmtzKCkgewogICAgICBpZiAodGhpcy5ub2RlRGF0YSkgewogICAgICAgIHJldHVybiB0aGlzLm5vZGVEYXRhLmxpbmtzKCk7CiAgICAgIH0KICAgIH0sCiAgICBzdHlsZXM6IGZ1bmN0aW9uIHN0eWxlcygpIHsKICAgICAgaWYgKCF0aGlzLmF1dG9Qb3NpdGlvbikgcmV0dXJuOwogICAgICB2YXIgeCA9IHRoaXMubGF5b3V0VHlwZSA9PT0gJ3RyZWVtYXAnIHx8IHRoaXMubGF5b3V0VHlwZSA9PT0gJ3BhcnRpdGlvbicgPyB0aGlzLm5vZGVEYXRhLngwIDogdGhpcy5ub2RlRGF0YS54OwogICAgICB2YXIgeSA9IHRoaXMubGF5b3V0VHlwZSA9PT0gJ3RyZWVtYXAnIHx8IHRoaXMubGF5b3V0VHlwZSA9PT0gJ3BhcnRpdGlvbicgPyB0aGlzLm5vZGVEYXRhLnkwIDogdGhpcy5ub2RlRGF0YS55OwogICAgICB2YXIgcHJvcHMgPSB7CiAgICAgICAgdHJhbnNmb3JtOiAidHJhbnNsYXRlM2QoIi5jb25jYXQoeCwgInB4LCIpLmNvbmNhdCh5LCAicHgsMCkiKQogICAgICB9OyAvLyBJZiB0aGlzIGlzIGEgdHJlZW1hcCBvciBwYXJ0aXRpb24gYXNzaWduIHdpZHRoIGFuZCBoZWlnaHQKCiAgICAgIGlmICh0aGlzLmxheW91dFR5cGUgPT09ICd0cmVlbWFwJyB8fCB0aGlzLmxheW91dFR5cGUgPT09ICdwYXJ0aXRpb24nKSB7CiAgICAgICAgT2JqZWN0LmFzc2lnbihwcm9wcywgewogICAgICAgICAgd2lkdGg6ICIiLmNvbmNhdCh0aGlzLm5vZGVEYXRhLngxIC0gdGhpcy5ub2RlRGF0YS54MCwgInB4IiksCiAgICAgICAgICBoZWlnaHQ6ICIiLmNvbmNhdCh0aGlzLm5vZGVEYXRhLnkxIC0gdGhpcy5ub2RlRGF0YS55MCwgInB4IikKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMubGF5b3V0VHlwZSA9PT0gJ3BhY2snKSB7CiAgICAgICAgT2JqZWN0LmFzc2lnbihwcm9wcywgewogICAgICAgICAgd2lkdGg6ICIiLmNvbmNhdCh0aGlzLm5vZGVEYXRhLnIgKiAyLCAicHgiKSwKICAgICAgICAgIGhlaWdodDogIiIuY29uY2F0KHRoaXMubm9kZURhdGEuciAqIDIsICJweCIpCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBwcm9wczsKICAgIH0KICB9Cn07"},{"version":3,"sources":["D3HierarchyNode.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,SAFA;AAGA,MAAA,SAAA,EAAA,mBAAA,CAAA,EAAA;AACA,eAAA,CAAA,KAAA,SAAA,IAAA,CAAA,KAAA,WAAA;AACA;AALA,KALA;AAYA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAZA,GADA;AAiBA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,UAAA,KAAA,QAAA,EAAA;AACA,eAAA,KAAA,QAAA,CAAA,KAAA,EAAA;AACA;AACA,KALA;AAMA,IAAA,MANA,oBAMA;AACA,UAAA,CAAA,KAAA,YAAA,EAAA;AACA,UAAA,CAAA,GACA,KAAA,UAAA,KAAA,SAAA,IAAA,KAAA,UAAA,KAAA,WAAA,GACA,KAAA,QAAA,CAAA,EADA,GAEA,KAAA,QAAA,CAAA,CAHA;AAIA,UAAA,CAAA,GACA,KAAA,UAAA,KAAA,SAAA,IAAA,KAAA,UAAA,KAAA,WAAA,GACA,KAAA,QAAA,CAAA,EADA,GAEA,KAAA,QAAA,CAAA,CAHA;AAIA,UAAA,KAAA,GAAA;AACA,QAAA,SAAA,wBAAA,CAAA,gBAAA,CAAA;AADA,OAAA,CAVA,CAaA;;AACA,UAAA,KAAA,UAAA,KAAA,SAAA,IAAA,KAAA,UAAA,KAAA,WAAA,EAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,KAAA,EAAA;AACA,UAAA,KAAA,YAAA,KAAA,QAAA,CAAA,EAAA,GAAA,KAAA,QAAA,CAAA,EAAA,OADA;AAEA,UAAA,MAAA,YAAA,KAAA,QAAA,CAAA,EAAA,GAAA,KAAA,QAAA,CAAA,EAAA;AAFA,SAAA;AAIA;;AACA,UAAA,KAAA,UAAA,KAAA,MAAA,EAAA;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,KAAA,EAAA;AACA,UAAA,KAAA,YAAA,KAAA,QAAA,CAAA,CAAA,GAAA,CAAA,OADA;AAEA,UAAA,MAAA,YAAA,KAAA,QAAA,CAAA,CAAA,GAAA,CAAA;AAFA,SAAA;AAIA;;AACA,aAAA,KAAA;AACA;AAjCA;AAjBA,CAAA","sourcesContent":["<template>\r\n  <g class=\"hierarchy-node\" :style=\"styles\">\r\n    <slot v-bind=\"$props\">\r\n      <!-- <circle r=\"10\"\r\n              fill=\"#fff\">\r\n      </circle> -->\r\n    </slot>\r\n  </g>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    nodeData: {\r\n      type:     Object,\r\n      required: true\r\n    },\r\n    layoutType: {\r\n      type:      String,\r\n      default:   'treemap',\r\n      validator: v => {\r\n        return v === 'treemap' || v === 'partition'\r\n      }\r\n    },\r\n    autoPosition: {\r\n      type: Object\r\n    }\r\n  },\r\n  computed: {\r\n    links() {\r\n      if (this.nodeData) {\r\n        return this.nodeData.links()\r\n      }\r\n    },\r\n    styles() {\r\n      if (!this.autoPosition) return\r\n      const x =\r\n        this.layoutType === 'treemap' || this.layoutType === 'partition'\r\n          ? this.nodeData.x0\r\n          : this.nodeData.x\r\n      const y =\r\n        this.layoutType === 'treemap' || this.layoutType === 'partition'\r\n          ? this.nodeData.y0\r\n          : this.nodeData.y\r\n      const props = {\r\n        transform: `translate3d(${x}px,${y}px,0)`\r\n      }\r\n      // If this is a treemap or partition assign width and height\r\n      if (this.layoutType === 'treemap' || this.layoutType === 'partition') {\r\n        Object.assign(props, {\r\n          width:  `${this.nodeData.x1 - this.nodeData.x0}px`,\r\n          height: `${this.nodeData.y1 - this.nodeData.y0}px`\r\n        })\r\n      }\r\n      if (this.layoutType === 'pack') {\r\n        Object.assign(props, {\r\n          width:  `${this.nodeData.r * 2}px`,\r\n          height: `${this.nodeData.r * 2}px`\r\n        })\r\n      }\r\n      return props\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.hierarchy-node {\r\n  position: absolute;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}